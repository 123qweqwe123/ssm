<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描base-package目录
        把标注有@Component、@Controller、@Service、@Repository注解的类注册成bean。
        use-default-filters 默认为true, 表示使用默认的过滤器。
        use-default-filters="false" 表示不使用默认的过滤器 -->
    <context:component-scan base-package="com.lmbx.ssm.**.controller,com.lmbx.ssm.utils,com.lmbx.ssm.webservices" use-default-filters="false">
        <!-- 自定义扫描文件：必须设置use-default-filters的值为false
            <context:include-filter> 引入的过滤。
            <context:exclude-filter> 排除的过滤。 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    	<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>

    <!-- 注解驱动（支持对象与json的转换） -->
    <mvc:annotation-driven />

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/" />

    <!-- 视图解析器(定义JSP文件的位置) -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
   <!-- 拦截器 -->  
   <mvc:interceptors>  
    <!-- 对所有请求都拦截，公共拦截器可以有多个 -->  
    <bean name="baseInterceptor" class="com.lmbx.ssm.MyInterceptor.BaseInterceptor" />  
    <!-- <bean name="testInterceptor" class="cn.zifangsky.interceptor.TestInterceptor" /> -->  
    <mvc:interceptor>       
        <!-- 对/test.html进行拦截 -->  
        <mvc:mapping path="/sys/user"/>  
        <!-- 特定请求的拦截器只能有一个 -->  
        <bean class="com.lmbx.ssm.MyInterceptor.TestInterceptor" />  
    </mvc:interceptor>  
	</mvc:interceptors>  

	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean> 

</beans>